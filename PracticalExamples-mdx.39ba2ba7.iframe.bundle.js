(self.webpackChunkzod2gql=self.webpackChunkzod2gql||[]).push([[79],{"./docs/PracticalExamples.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");__webpack_require__("./src/index.ts"),__webpack_require__("./src/mutation.ts"),__webpack_require__("./src/query.ts"),__webpack_require__("./src/subscription.ts");const CodeBlock=({language="typescript",children,showLineNumbers=!1})=>(0,jsx_runtime.jsx)(dist.kL,{language,code:children,format:!0,dark:!0}),InfoBox=({type="info",title,children})=>(0,jsx_runtime.jsxs)("div",{className:`info-box ${type}`,style:getInfoBoxStyle(type),children:[title&&(0,jsx_runtime.jsx)("h4",{style:{marginTop:0},children:title}),(0,jsx_runtime.jsx)("div",{children})]}),getInfoBoxStyle=type=>{const baseStyle={padding:"1rem",marginBottom:"1rem",borderLeft:"4px solid",borderRadius:"4px"};switch(type){case"warning":return{...baseStyle,backgroundColor:"#fff3cd",borderLeftColor:"#ffc107"};case"tip":return{...baseStyle,backgroundColor:"#d4edda",borderLeftColor:"#28a745"};case"note":return{...baseStyle,backgroundColor:"#e2e3e5",borderLeftColor:"#6c757d"};case"danger":return{...baseStyle,backgroundColor:"#f8d7da",borderLeftColor:"#dc3545"};default:return{...baseStyle,backgroundColor:"#d1ecf1",borderLeftColor:"#17a2b8"}}};function _createMdxContent(props){const _components={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Documentation/Practical Examples"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"practical-examples",children:"Practical Examples"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Real-world examples of using ",(0,jsx_runtime.jsx)(_components.code,{children:"zod2gql"})," in common scenarios."]}),"\n",(0,jsx_runtime.jsx)(InfoBox,{type:"info",title:"Note",children:(0,jsx_runtime.jsx)(_components.p,{children:"These examples demonstrate how to use zod2gql in typical GraphQL integration use cases."})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"user-management-system",children:"User Management System"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"user-schema-with-authentication",children:"User Schema with Authentication"}),"\n",(0,jsx_runtime.jsx)(CodeBlock,{language:"typescript",children:"\nimport { z } from 'zod';\nimport { createQuery, createMutation } from 'zod2gql';\n\n// Define user-related schemas\nconst userSchema = z.object({\n  id: z.string(),\n  username: z.string(),\n  email: z.string().email(),\n  firstName: z.string().optional(),\n  lastName: z.string().optional(),\n  role: z.enum(['admin', 'user', 'moderator']),\n  isActive: z.boolean(),\n  createdAt: z.string(),\n  updatedAt: z.string().optional(),\n});\n\nconst loginResponseSchema = z.object({\n  token: z.string(),\n  refreshToken: z.string(),\n  user: userSchema,\n});\n\n// Generate queries\nconst getUserQuery = createQuery(userSchema, {\n  operationName: 'GetUser',\n  variables: { id: '$id' }\n});\n\n// Generate mutations\nconst loginMutation = createMutation(loginResponseSchema, {\n  operationName: 'Login',\n  variables: {\n    email: '$email',\n    password: '$password'\n  }\n});\n\nconst registerMutation = createMutation(userSchema, {\n  operationName: 'RegisterUser',\n  variables: {\n    input: {\n      username: '$username',\n      email: '$email',\n      password: '$password',\n      firstName: '$firstName',\n      lastName: '$lastName'\n    }\n  },\n  inputTypeMap: {\n    input: 'RegisterUserInput'\n  }\n});\n\n// Generate subscription\nconst userStatusSubscription = createSubscription(userSchema, {\n  operationName: 'UserStatusChanged',\n  variables: { userId: '$userId' }\n});\n"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"e-commerce-product-catalog",children:"E-commerce Product Catalog"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"product-category-and-review-schemas",children:"Product, Category, and Review Schemas"}),"\n",(0,jsx_runtime.jsx)(CodeBlock,{language:"typescript",children:"\nimport { z } from 'zod';\nimport { createQuery, createMutation } from 'zod2gql';\n\n// Define schemas\nconst categorySchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  description: z.string().optional(),\n  parentId: z.string().optional(),\n});\n\nconst reviewSchema = z.object({\n  id: z.string(),\n  productId: z.string(),\n  userId: z.string(),\n  rating: z.number().min(1).max(5),\n  title: z.string().optional(),\n  content: z.string(),\n  createdAt: z.string(),\n});\n\nconst productSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  description: z.string(),\n  price: z.number().positive(),\n  salePrice: z.number().positive().optional(),\n  inventory: z.number().int().nonnegative(),\n  categoryId: z.string(),\n  category: categorySchema,\n  reviews: z.array(reviewSchema),\n  averageRating: z.number().min(0).max(5).optional(),\n  images: z.array(z.string()),\n  isActive: z.boolean(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\n// Generate queries\nconst getProductQuery = createQuery(productSchema, {\n  operationName: 'GetProduct',\n  variables: { slug: '$slug' }\n});\n\nconst getCategoryProductsQuery = createQuery(\n  z.object({\n    category: categorySchema,\n    products: z.array(productSchema),\n    pagination: z.object({\n      total: z.number(),\n      page: z.number(),\n      pageSize: z.number(),\n      hasMore: z.boolean(),\n    }),\n  }),\n  {\n    operationName: 'GetCategoryProducts',\n    variables: { \n      categorySlug: '$categorySlug',\n      page: '$page',\n      pageSize: '$pageSize'\n    }\n  }\n);\n\n// Generate mutations\nconst createProductMutation = createMutation(productSchema, {\n  operationName: 'CreateProduct',\n  variables: {\n    input: {\n      name: '$name',\n      slug: '$slug',\n      description: '$description',\n      price: '$price',\n      salePrice: '$salePrice',\n      inventory: '$inventory',\n      categoryId: '$categoryId',\n      images: '$images',\n      isActive: '$isActive'\n    }\n  },\n  inputTypeMap: {\n    input: 'CreateProductInput'\n  }\n});\n\nconst createReviewMutation = createMutation(reviewSchema, {\n  operationName: 'CreateReview',\n  variables: {\n    input: {\n      productId: '$productId',\n      rating: '$rating',\n      title: '$title',\n      content: '$content'\n    }\n  },\n  inputTypeMap: {\n    input: 'CreateReviewInput'\n  }\n});\n"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"blog-platform",children:"Blog Platform"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"posts-comments-and-tags-schemas",children:"Posts, Comments, and Tags Schemas"}),"\n",(0,jsx_runtime.jsx)(CodeBlock,{language:"typescript",children:"\nimport { z } from 'zod';\nimport { createQuery, createMutation, createSubscription } from 'zod2gql';\n\n// Define schemas\nconst authorSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  bio: z.string().optional(),\n  avatarUrl: z.string().optional(),\n});\n\nconst tagSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  slug: z.string(),\n});\n\nconst commentSchema = z.object({\n  id: z.string(),\n  postId: z.string(),\n  author: authorSchema,\n  content: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string().optional(),\n  isEdited: z.boolean().default(false),\n  likes: z.number().default(0),\n});\n\nconst postSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  slug: z.string(),\n  excerpt: z.string(),\n  content: z.string(),\n  author: authorSchema,\n  tags: z.array(tagSchema),\n  comments: z.array(commentSchema),\n  featured: z.boolean().default(false),\n  publishedAt: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string().optional(),\n  readingTime: z.number().optional(),\n  viewCount: z.number().default(0),\n  likeCount: z.number().default(0),\n});\n\n// Generate queries\nconst getPostQuery = createQuery(postSchema, {\n  operationName: 'GetPost',\n  variables: { slug: '$slug' }\n});\n\nconst getPostsQuery = createQuery(\n  z.object({\n    posts: z.array(postSchema),\n    pagination: z.object({\n      total: z.number(),\n      page: z.number(),\n      pageSize: z.number(),\n      hasMore: z.boolean(),\n    }),\n  }),\n  {\n    operationName: 'GetPosts',\n    variables: { \n      page: '$page',\n      pageSize: '$pageSize',\n      tag: '$tag',\n      authorId: '$authorId'\n    }\n  }\n);\n\n// Generate mutations\nconst createPostMutation = createMutation(postSchema, {\n  operationName: 'CreatePost',\n  variables: {\n    input: {\n      title: '$title',\n      content: '$content',\n      excerpt: '$excerpt',\n      tags: '$tags',\n      featured: '$featured',\n      publish: '$publish'\n    }\n  },\n  inputTypeMap: {\n    input: 'CreatePostInput'\n  }\n});\n\nconst createCommentMutation = createMutation(commentSchema, {\n  operationName: 'CreateComment',\n  variables: {\n    postId: '$postId',\n    content: '$content'\n  }\n});\n\n// Generate subscription\nconst newCommentSubscription = createSubscription(commentSchema, {\n  operationName: 'OnNewComment',\n  variables: { postId: '$postId' }\n});\n\nconst postUpdateSubscription = createSubscription(postSchema, {\n  operationName: 'OnPostUpdate',\n  variables: { postId: '$postId' }\n});\n"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"real-time-chat-application",children:"Real-time Chat Application"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"messages-channels-and-presence",children:"Messages, Channels, and Presence"}),"\n",(0,jsx_runtime.jsx)(CodeBlock,{language:"typescript",children:"\nimport { z } from 'zod';\nimport { createQuery, createMutation, createSubscription } from 'zod2gql';\n\n// Define schemas\nconst userPresenceSchema = z.object({\n  userId: z.string(),\n  username: z.string(),\n  status: z.enum(['online', 'away', 'busy', 'offline']),\n  lastSeen: z.string(),\n  typing: z.boolean().default(false),\n  activeChannelId: z.string().optional(),\n});\n\nconst messageAttachmentSchema = z.object({\n  id: z.string(),\n  type: z.enum(['image', 'file', 'link']),\n  url: z.string(),\n  title: z.string().optional(),\n  size: z.number().optional(),\n  mimeType: z.string().optional(),\n});\n\nconst messageSchema = z.object({\n  id: z.string(),\n  channelId: z.string(),\n  userId: z.string(),\n  username: z.string(),\n  content: z.string(),\n  attachments: z.array(messageAttachmentSchema).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string().optional(),\n  isEdited: z.boolean().default(false),\n  reactions: z.record(z.string(), z.number()).optional(),\n  mentions: z.array(z.string()).optional(),\n});\n\nconst channelSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  type: z.enum(['public', 'private', 'direct']),\n  members: z.array(z.string()),\n  createdAt: z.string(),\n  updatedAt: z.string().optional(),\n  lastMessageAt: z.string().optional(),\n});\n\n// Generate queries\nconst getChannelsQuery = createQuery(\n  z.object({\n    channels: z.array(channelSchema)\n  }),\n  {\n    operationName: 'GetChannels',\n    variables: { userId: '$userId' }\n  }\n);\n\nconst getChannelMessagesQuery = createQuery(\n  z.object({\n    messages: z.array(messageSchema),\n    channel: channelSchema,\n    members: z.array(userPresenceSchema)\n  }),\n  {\n    operationName: 'GetChannelMessages',\n    variables: { \n      channelId: '$channelId',\n      limit: '$limit',\n      before: '$before'\n    }\n  }\n);\n\n// Generate mutations\nconst sendMessageMutation = createMutation(messageSchema, {\n  operationName: 'SendMessage',\n  variables: {\n    input: {\n      channelId: '$channelId',\n      content: '$content',\n      attachments: '$attachments',\n      mentions: '$mentions'\n    }\n  },\n  inputTypeMap: {\n    input: 'SendMessageInput'\n  }\n});\n\nconst createChannelMutation = createMutation(channelSchema, {\n  operationName: 'CreateChannel',\n  variables: {\n    name: '$name',\n    type: '$type',\n    members: '$members'\n  }\n});\n\nconst updateUserPresenceMutation = createMutation(userPresenceSchema, {\n  operationName: 'UpdateUserPresence',\n  variables: {\n    status: '$status',\n    typing: '$typing',\n    activeChannelId: '$activeChannelId'\n  }\n});\n\n// Generate subscriptions\nconst messageSubscription = createSubscription(messageSchema, {\n  operationName: 'OnMessage',\n  variables: { channelId: '$channelId' }\n});\n\nconst typingIndicatorSubscription = createSubscription(\n  z.object({\n    userId: z.string(),\n    username: z.string(),\n    channelId: z.string(),\n    typing: z.boolean()\n  }),\n  {\n    operationName: 'OnTypingIndicator',\n    variables: { channelId: '$channelId' }\n  }\n);\n\nconst presenceChangedSubscription = createSubscription(userPresenceSchema, {\n  operationName: 'OnPresenceChanged',\n  variables: { channelId: '$channelId' }\n});\n"}),"\n",(0,jsx_runtime.jsx)(InfoBox,{type:"tip",title:"Integration tip",children:(0,jsx_runtime.jsx)(_components.p,{children:"These examples can be used with GraphQL client libraries like Apollo Client, urql, or React Query with GraphQL support."})})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}CodeBlock.__docgenInfo={description:"A component for displaying code with syntax highlighting",methods:[],displayName:"CodeBlock",props:{language:{required:!1,tsType:{name:"SupportedLanguage"},description:"The language for syntax highlighting",defaultValue:{value:"'typescript'",computed:!1}},children:{required:!0,tsType:{name:"string"},description:"The code to display"},showLineNumbers:{required:!1,tsType:{name:"boolean"},description:"Whether to show line numbers",defaultValue:{value:"false",computed:!1}}}},InfoBox.__docgenInfo={description:"A component for displaying information boxes",methods:[],displayName:"InfoBox",props:{type:{required:!1,tsType:{name:"union",raw:"'info' | 'warning' | 'tip' | 'note' | 'danger'",elements:[{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'tip'"},{name:"literal",value:"'note'"},{name:"literal",value:"'danger'"}]},description:"Type of info box: 'info', 'warning', 'tip', etc.",defaultValue:{value:"'info'",computed:!1}},title:{required:!1,tsType:{name:"string"},description:"Box title"},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Box content"}}}},"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Hl:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Hl,W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.W8,gG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.gG,kL:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.kL});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-PRSJUHPQ.mjs"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-NUUEMKO5.mjs"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs"),__webpack_require__("storybook/internal/preview-api");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext},"./src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Hh:()=>formatVariablesDeclaration,Jf:()=>getOperationFieldName,Nt:()=>GQLType,ON:()=>formatFieldArguments,fO:()=>processFields});var zod__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/zod/lib/index.mjs"),_mutation__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/mutation.ts"),_query__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/query.ts"),_subscription__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/subscription.ts"),GQLType=function(GQLType){return GQLType.Query="query",GQLType.Mutation="mutation",GQLType.Subscription="subscription",GQLType}({});const getOperationFieldName=(schema,operationName)=>{if(operationName){let fieldName=operationName;const prefixes=["Get","Create","Update","Delete","Subscribe"];for(const prefix of prefixes)if(fieldName.startsWith(prefix)){fieldName=fieldName.substring(prefix.length);break}return fieldName.charAt(0).toLowerCase()+fieldName.slice(1)}{const typeName=schema._def.typeName||"";return typeName?typeName.charAt(0).toLowerCase()+typeName.slice(1):""}},formatVariablesDeclaration=(variables,inputTypeMap)=>variables&&0!==Object.keys(variables).length?`(${Object.entries(variables).map((([key,value])=>{if(inputTypeMap&&inputTypeMap[key])return`$${key}: ${inputTypeMap[key]}!`;let type="String";return"number"==typeof value&&(type="Int"),"boolean"==typeof value&&(type="Boolean"),"object"==typeof value&&null!==value&&(type=`${key.charAt(0).toUpperCase()+key.slice(1)}Input`),`$${key}: ${type}!`})).join(", ")})`:"",formatFieldArguments=variables=>variables&&0!==Object.keys(variables).length?`(${Object.entries(variables).map((([key])=>`${key}: $${key}`)).join(", ")})`:"",processFields=(schema,queryType,options={},depth=0)=>{const{maxDepth=10}=options;if(depth>maxDepth)return"";const indent="  ".repeat(depth);let query="";const shape=schema._def.shape();for(const[key,value]of Object.entries(shape)){const processSchema=(schema,fieldName)=>{if(schema instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodObject)query+=`${indent}${fieldName} {\n${processFields(schema,queryType,options,depth+1)}${indent}}\n`;else if(schema instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodArray){const elementType=schema._def.type;elementType&&"object"==typeof elementType&&"toJSON"in elementType?processSchema(elementType,fieldName):query+=`${indent}${fieldName}\n`}else if(schema instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodLazy){const innerType=schema._def.getter();innerType&&"object"==typeof innerType&&"toJSON"in innerType?processSchema(innerType,fieldName):query+=`${indent}${fieldName}\n`}else if(schema instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodOptional||schema instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodNullable){const innerType=schema._def.innerType;innerType&&"object"==typeof innerType&&"toJSON"in innerType?processSchema(innerType,fieldName):query+=`${indent}${fieldName}\n`}else schema instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodUnion||zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodEnum,query+=`${indent}${fieldName}\n`};value&&"object"==typeof value&&"toJSON"in value?processSchema(value,key):query+=`${indent}${key}\n`}return query};zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodObject.prototype.toGQL=function(queryType="query",options={},depth=0){if(depth>0)return processFields(this,queryType,options,depth);switch(queryType){case"query":return(0,_query__WEBPACK_IMPORTED_MODULE_1__.O)(this,options);case"mutation":return(0,_mutation__WEBPACK_IMPORTED_MODULE_0__.n)(this,options);case"subscription":return(0,_subscription__WEBPACK_IMPORTED_MODULE_2__.d)(this,options);default:return""}}},"./src/mutation.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>createMutation,n:()=>processMutation});var _index__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/index.ts");function processMutation(schema,options={}){const{operationName,variables,maxDepth=10,inputTypeMap}=options,operation=operationName?` ${operationName}`:"",varsString=((variables,inputTypeMap)=>variables&&0!==Object.keys(variables).length?`(${Object.entries(variables).map((([key,value])=>{if(inputTypeMap&&inputTypeMap[key])return`$${key}: ${inputTypeMap[key]}!`;let type="String";return"number"==typeof value?type="Int":"boolean"==typeof value?type="Boolean":"object"==typeof value&&null!==value&&(type=`${key.charAt(0).toUpperCase()+key.slice(1)}Input`),`$${key}: ${type}!`})).join(", ")})`:"")(variables,inputTypeMap),fieldArgs=(0,_index__WEBPACK_IMPORTED_MODULE_0__.ON)(variables),mutationField=(0,_index__WEBPACK_IMPORTED_MODULE_0__.Jf)(schema,operationName);return`${_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Mutation}${operation}${varsString} {\n  ${mutationField}${fieldArgs} {\n${(0,_index__WEBPACK_IMPORTED_MODULE_0__.fO)(schema,_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Mutation,options,2)}  }\n}`}function createMutation(schema,options={}){return schema.toGQL(_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Mutation,options)}},"./src/query.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{O:()=>processQuery,V:()=>createQuery});var _index__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/index.ts");function processQuery(schema,options={}){const{operationName,variables,maxDepth=10}=options,operation=operationName?` ${operationName}`:"",varsString=(0,_index__WEBPACK_IMPORTED_MODULE_0__.Hh)(variables,options.inputTypeMap),fieldArgs=(0,_index__WEBPACK_IMPORTED_MODULE_0__.ON)(variables),queryField=(0,_index__WEBPACK_IMPORTED_MODULE_0__.Jf)(schema,operationName);return`${_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Query}${operation}${varsString} {\n  ${queryField}${fieldArgs} {\n${(0,_index__WEBPACK_IMPORTED_MODULE_0__.fO)(schema,_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Query,options,2)}  }\n}`}function createQuery(schema,options={}){return schema.toGQL(_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Query,options)}},"./src/subscription.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{K:()=>createSubscription,d:()=>processSubscription});var _index__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/index.ts");function processSubscription(schema,options={}){const{operationName,variables,maxDepth=10}=options,operation=operationName?` ${operationName}`:"",varsString=(0,_index__WEBPACK_IMPORTED_MODULE_0__.Hh)(variables,options.inputTypeMap),fieldArgs=(0,_index__WEBPACK_IMPORTED_MODULE_0__.ON)(variables),subscriptionField=(0,_index__WEBPACK_IMPORTED_MODULE_0__.Jf)(schema,operationName);return`${_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Subscription}${operation}${varsString} {\n  ${subscriptionField}${fieldArgs} {\n${(0,_index__WEBPACK_IMPORTED_MODULE_0__.fO)(schema,_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Subscription,options,2)}  }\n}`}function createSubscription(schema,options={}){return schema.toGQL(_index__WEBPACK_IMPORTED_MODULE_0__.Nt.Subscription,options)}}}]);